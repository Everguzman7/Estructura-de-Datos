print("universidad cooperativa de colombia, campus cali")
print("Ever Wisney Rodriguez, 23, febrero, 2025")


# 4. Fibonacci: Recursión y Programación Dinámica

def fibonacci_recursivo(n):
    # Caso base: cuando n es 0 o 1
    return n if n <= 1 else fibonacci_recursivo(n - 1) + fibonacci_recursivo(n - 2)

def fibonacci_dinamico(n, memo={}):
    # Si el valor ya fue calculado, lo devuelve
    if n in memo:
        return memo[n]
    
    # Caso base: cuando n es 0 o 1
    if n <= 1:
        return n
    
    # Calcula el valor de Fibonacci y lo guarda en memoria 
    memo[n] = fibonacci_dinamico(n - 1, memo) + fibonacci_dinamico(n - 2, memo)
    
    # Devuelve el valor calculado
    return memo[n]

# Número de Fibonacci a calcular
n = 10

# Usando recursión simple
print(f"Fibonacci (recursivo) de {n}: {fibonacci_recursivo(n)}")

# Usando recuesión programación dinámica
print(f"Fibonacci (dinámico) de {n}: {fibonacci_dinamico(n)}")